{"version":3,"sources":["theme/globalStyle.js","components/AppHeader.js","helpers.js","components/Input.js","components/ModalPicture.js","components/PictureCard.js","components/TenLastPictures.js","components/App.js","serviceWorker.js","index.js"],"names":["light","primary","secondary","danger","dark","backgroundColor","GlobalStyle","createGlobalStyle","props","theme","JumbotronBackground","styled","Jumbotron","AppTitle","h1","FavouriteContainer","span","ModeThemeChanger","div","Paragraph","p","AppHeader","fluid","className","icon","faHeart","color","size","transform","numberOfFavourites","Form","Switch","onChange","setLightTheme","isLightTheme","type","id","label","faMoon","faSun","value","today","moment","format","FormContainer","InputGroupSquare","InputGroup","Text","ButtonSquare","Button","InputContainer","Control","Input","inputRef","useRef","useEffect","current","focus","Container","onSubmit","handleSubmit","Label","Prepend","faSearch","ref","min","max","name","required","pattern","variant","ModalContainer","Modal","ModalPicture","show","onHide","handleClose","centered","Header","closeButton","Title","title","Body","src","url","alt","CardContainer","Image","h2","shift","IconContainer","FontAwesomeIcon","Link","a","PictureCard","useState","animate","setAnimate","setShow","isLoading","setIsLoading","pictureData","setPictureData","initialFavourite","localStorage","getItem","date","isFavourite","setIsFavourite","fetchPictureData","axios","get","response","data","console","error","Spinner","animation","role","onEnter","onLeave","CSSTransition","in","timeout","classNames","Row","Col","md","order","onClick","faHeartSolid","faHeartRegular","removeItem","setNumberOfFavourites","prevState","setItem","JSON","stringify","explanation","copyright","href","hdurl","SectionTitle","Line","hr","TenLastPictures","tenLastPicturesCards","dates","i","subtract","getLastTenDays","map","element","index","oddOrEven","key","App","setDate","initialNumberOfFavourites","Object","keys","length","e","preventDefault","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"u1BAGO,IAAMA,EAAQ,CACjBC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRH,MAAO,UACPI,KAAM,UACNC,gBAAiB,WAGRD,EAAO,CAChBH,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRH,MAAO,UACPI,KAAM,UACNC,gBAAiB,QA4BNC,EAzBKC,YAAH,KAWO,SAACC,GAAD,OAAWA,EAAMC,MAAMJ,mB,0qCC1B/C,IAAMK,EAAsBC,YAAOC,IAAPD,CAAH,KAQnBE,EAAWF,IAAOG,GAAV,KAaRC,EAAqBJ,IAAOK,KAAV,KAelBC,EAAmBN,IAAOO,IAAV,KAQhBC,EAAYR,IAAOS,EAAV,KAoDAC,MA1Cf,SAAmBb,GACjB,OACE,kBAACE,EAAD,CAAqBY,OAAK,GACxB,kBAACP,EAAD,CAAoBQ,UAAU,mBAC5B,kBAAC,IAAD,CACEC,KAAMC,IACNC,MAAM,QACNC,KAAK,KACLC,UAAU,kBAEZ,0BAAML,UAAU,iBAAiBG,MAAM,SACpClB,EAAMqB,qBAIX,kBAACZ,EAAD,KACE,kBAACa,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CACEC,SAAU,kBAAMxB,EAAMyB,eAAezB,EAAM0B,eAC3CC,KAAK,SACLC,GAAG,gBACHC,MACE7B,EAAM0B,aACJ,kBAAC,IAAD,CAAiBV,KAAMc,MAEvB,kBAAC,IAAD,CAAiBd,KAAMe,MAG3BC,MAAM,WAKZ,kBAAC3B,EAAD,qCACA,kBAACM,EAAD,6H,0CC5FOsB,EAAQC,MAASC,OAAO,c,mdCOrC,IAAMC,EAAgBjC,YAAOmB,IAAPnB,CAAH,KACR,SAACH,GAAD,OAAWA,EAAMC,MAAMP,aAS5B2C,EAAmBlC,YAAOmC,IAAWC,KAAlBpC,CAAH,KAIhBqC,EAAerC,YAAOsC,IAAPtC,CAAH,KAKZuC,EAAiBvC,YAAOmB,IAAKqB,QAAZxC,CAAH,KAwCLyC,MApCf,SAAe5C,GACb,IAAM6C,EAAWC,iBAAO,MAMxB,OAJAC,qBAAU,WACRF,EAASG,QAAQC,UAChB,IAGD,kBAACC,EAAA,EAAD,KACE,kBAACd,EAAD,CAAee,SAAUnD,EAAMoD,cAC7B,kBAACd,EAAA,EAAD,KACE,kBAAChB,EAAA,EAAK+B,MAAN,0CAEF,kBAACf,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWgB,QAAZ,KACE,kBAACjB,EAAD,CAAkBT,GAAG,oBAAoBb,UAAU,aAAY,kBAAC,IAAD,CAAiBC,KAAMuC,IAAUpC,KAAK,SAEvG,kBAACuB,EAAD,CACEc,IAAKX,EACLlB,KAAK,OACL8B,IAAI,aACJC,IAAKzB,EACL0B,KAAK,OACLC,UAAQ,EACRC,QAAQ,yBACP,IACH,kBAACrB,EAAD,CAAcsB,QAAQ,YAAYnC,KAAK,UAAvC,a,gKCtDV,IAAMoC,EAAiB5D,YAAO6D,IAAP7D,CAAH,KAiBL8D,OAbf,SAAsBjE,GACpB,OACE,kBAAC+D,EAAD,CAAgBG,KAAMlE,EAAMkE,KAAMC,OAAQnE,EAAMoE,YAAaC,UAAQ,EAAClD,KAAK,MACzE,kBAAC6C,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACvB,kBAACP,EAAA,EAAMQ,MAAP,KAAcxE,EAAMyE,QAEtB,kBAACT,EAAA,EAAMU,KAAP,KACE,yBAAKC,IAAK3E,EAAM4E,IAAKC,IAAI,0B,y4DCJjC,IAAMC,GAAgB3E,IAAOO,IAAV,MAGG,SAACV,GAAD,OAAWA,EAAMC,MAAML,QAkCvCmF,GAAQ5E,IAAOO,IAAV,MACe,SAACV,GAAD,OAAWA,EAAM4E,OAQrCJ,GAAQrE,IAAO6E,GAAV,MAGA,SAAChF,GAAD,OAAWA,EAAMC,MAAMP,aAI5BiB,GAAYR,IAAOO,IAAV,MAML,SAACV,GAAD,OAAWA,EAAMiF,SAGhB,SAACjF,GAAD,OAAWA,EAAMC,MAAMP,aACZ,SAACM,GAAD,OAAWA,EAAMC,MAAMT,SAgBvC0F,GAAgB/E,YAAOgF,IAAPhF,CAAH,MAEbiF,GAAOjF,IAAOkF,EAAV,MAIY,SAACrF,GAAD,OAAWA,EAAMC,MAAMN,UAClC,SAACK,GAAD,OAAWA,EAAMC,MAAMP,aAOrB,SAACM,GAAD,OAAWA,EAAMC,MAAMP,aAoGrB4F,OAhGf,SAAqBtF,GAAQ,IAAD,EACIuF,oBAAS,GADb,mBACnBC,EADmB,KACVC,EADU,OAGFF,oBAAS,GAHP,mBAGnBrB,EAHmB,KAGbwB,EAHa,OAOQH,oBAAS,GAPjB,mBAOnBI,EAPmB,KAORC,EAPQ,OAQYL,mBAAS,IARrB,mBAQnBM,EARmB,KAQNC,EARM,KAUpBC,IAAqBC,aAAaC,QAAQjG,EAAMkG,MAV5B,EAWYX,mBAASQ,GAXrB,mBAWnBI,EAXmB,KAWNC,EAXM,KAapBC,EAAgB,uCAAG,WAAOH,GAAP,eAAAb,EAAA,sEAErBO,GAAa,GAFQ,SAGEU,KAAMC,IAAN,mDACuBL,EADvB,sDAHF,OAGfM,EAHe,OAMrBV,EAAeU,EAASC,MACxBb,GAAa,GAPQ,gDASrBc,QAAQC,MAAR,MATqB,yDAAH,sDA6BtB,OAJA5D,qBAAU,WACRsD,EAAiBrG,EAAMkG,QACtB,CAAClG,EAAMkG,OAENP,EAEA,kBAACb,GAAD,KACE,kBAAC8B,EAAA,EAAD,CAASC,UAAU,OAAO/C,QAAQ,QAAQgD,KAAK,UAC7C,0BAAM/F,UAAU,WAAhB,gBAON,kBAAC,IAAD,CACEgG,QAAS,kBAAMtB,GAAW,IAC1BuB,QAAS,kBAAMvB,GAAW,KAE1B,6BACE,kBAACwB,GAAA,EAAD,CAAeC,GAAI1B,EAAS2B,QAAS,KAAMC,WAAW,QACpD,kBAACtC,GAAD,KACE,kBAACuC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAE/G,KAAM,EAAGgH,MAAOxH,EAAMwH,MAAQ,EAAI,KAC3C,kBAACzC,GAAD,CAAOH,IAAKiB,EAAYjB,IAAK6C,QAzDxB,kBAAM/B,GAAQ,OA2DrB,kBAAC4B,EAAA,EAAD,CAAKC,GAAI,CAAE/G,KAAM,EAAGgH,MAAOxH,EAAMwH,MAAQ,GAAK,IAC5C,kBAAC,GAAD,CAAWvC,MAAOjF,EAAMiF,OACtB,kBAACT,GAAD,KAAQqB,EAAYpB,OACpB,kBAACS,GAAD,CACElE,KAAMmF,EAAcuB,IAAeC,KACnCxG,KAAK,KACLsG,QA3Cc,WAC1BtB,GACFH,aAAa4B,WAAW5H,EAAMkG,MAC9BlG,EAAM6H,uBAAsB,SAACC,GAAD,OAAeA,EAAY,OAEvD9B,aAAa+B,QAAQ/H,EAAMkG,KAAM8B,KAAKC,UAAUpC,IAChD7F,EAAM6H,uBAAsB,SAACC,GAAD,OAAeA,EAAY,MAEzD1B,GAAgBD,MAqCF,2BAAIN,EAAYK,MAChB,2BAAIL,EAAYqC,aAChB,wCACa,IACVrC,EAAYsC,UAAYtC,EAAYsC,UAAY,WAEnD,kBAAC/C,GAAD,CAAMgD,KAAMvC,EAAYwC,OAAxB,iBAKN,kBAAC,GAAD,CACEnE,KAAMA,EACNE,YAjFQ,kBAAMsB,GAAQ,IAkFtBd,IAAKiB,EAAYjB,IACjBH,MAAOoB,EAAYpB,a,ufC9LjC,IAAM6D,GAAenI,IAAO6E,GAAV,MAIP,SAAChF,GAAD,OAAWA,EAAMC,MAAMP,aAS5B6I,GAAOpI,IAAOqI,GAAV,MAIkB,SAACxI,GAAD,OAAWA,EAAMC,MAAMP,aA0CpC+I,OApCf,SAAyBzI,GACvB,IAYM0I,EAZiB,WAErB,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAMC,GAAK1G,MACR2G,SAASD,EAAI,EAAG,QAChBzG,OAAO,cAEZ,OAAOwG,EAGKG,GAEqBC,KAAI,SAACC,EAASC,GAC/C,IAAMC,EAAYD,EAAQ,EAE1B,OACE,kBAAC,GAAD,CACEE,IAAKF,EACL/C,KAAM8C,EACNxB,QAAS0B,EACTjE,MAAOiE,EAAY,OAAS,IAC5BrB,sBAAuB7H,EAAM6H,2BAKnC,OACE,oCACE,kBAACU,GAAD,MACA,kBAACD,GAAD,4CAFF,IAGGI,ICZQU,OArCf,WAAgB,IAAD,EACyB7D,oBAAS,GADlC,mBACN7D,EADM,KACQD,EADR,OAEW8D,mBAAStD,GAFpB,mBAENiE,EAFM,KAEAmD,EAFA,KAITC,EAA4BC,OAAOC,KAAKxD,cAAcyD,OAJ7C,EAKuClE,mBAClD+D,GANW,mBAKNjI,EALM,KAKcwG,EALd,KAcb,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAe5H,MAAOyB,EAAelC,EAAQI,GAC3C,kBAAC,EAAD,MACA,kBAAC,EAAD,CACE6B,cAAeA,EACfC,aAAcA,EACdL,mBAAoBA,IAEtB,kBAAC,EAAD,CAAO+B,aAdQ,SAACsG,GACpBA,EAAEC,iBACFN,EAAQK,EAAEE,OAAO1D,KAAKlE,UAalB,kBAAC,GAAD,CACEkE,KAAMA,EACNiD,IAAK,IACL3B,OAAO,EACPvC,MAAO,OACP4C,sBAAuBA,IAEzB,kBAAC,GAAD,CAAiBA,sBAAuBA,OC7B5BgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlE,GACLD,QAAQC,MAAMA,EAAMmE,c","file":"static/js/main.813febf1.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\n\r\n\r\nexport const light = {\r\n    primary: \"#111111\",\r\n    secondary: \"#1A1A1A\",\r\n    danger: \"#8301FE\",\r\n    light: \"#f4f4f4\",\r\n    dark: \"#999999\",\r\n    backgroundColor: \"#f4f4f4\",\r\n};\r\n\r\nexport const dark = {\r\n    primary: \"#999999\",\r\n    secondary: \"#FFFFFF\",\r\n    danger: \"#8301FE\",\r\n    light: \"#1A1A1A\",\r\n    dark: \"#111111\",\r\n    backgroundColor: \"#000\",\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  \r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    \r\n    @media (max-width: 768px) {\r\n      text-align: center;\r\n    }\r\n\r\n  }\r\n \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n      monospace;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Jumbotron } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst JumbotronBackground = styled(Jumbotron)`\r\n  background-image: url(\"https://apod.nasa.gov/apod/image/2004/STSCI-H-p2016a-m-2000x1374.jpg\");\r\n  background-size: cover;\r\n  background-color: transparent;\r\n  padding-top: 15vh;\r\n  padding-bottom: 15vh;\r\n`;\r\n\r\nconst AppTitle = styled.h1`\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: 900;\r\n  font-size: 4rem;\r\n  color: #fff;\r\n  margin-left: 10%;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 3rem;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst FavouriteContainer = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  font-weight: 500;\r\n  top: 30px;\r\n  left: 30px;\r\n  color: #000;\r\n  z-index: 10;\r\n\r\n  &.fa-layers-text {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst ModeThemeChanger = styled.div`\r\n  position: fixed;\r\n  top: 30px;\r\n  right: 30px;\r\n  color: #fff;\r\n  z-index: 10;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  margin-left: 10%;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n  @media (max-width: 768px) {\r\n    margin: 0;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nfunction AppHeader(props) {\r\n  return (\r\n    <JumbotronBackground fluid>\r\n      <FavouriteContainer className=\"fa-layers fa-fw\">\r\n        <FontAwesomeIcon\r\n          icon={faHeart}\r\n          color=\"white\"\r\n          size=\"2x\"\r\n          transform=\"left-3 down-1\"\r\n        />\r\n        <span className=\"fa-layers-text\" color=\"black\">\r\n          {props.numberOfFavourites}\r\n        </span>\r\n      </FavouriteContainer>\r\n\r\n      <ModeThemeChanger>\r\n        <Form>\r\n          <Form.Switch\r\n            onChange={() => props.setLightTheme(!props.isLightTheme)}\r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label={\r\n              props.isLightTheme ? (\r\n                <FontAwesomeIcon icon={faMoon} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={faSun} />\r\n              )\r\n            }\r\n            value=\"dark\"\r\n          />\r\n        </Form>\r\n      </ModeThemeChanger>\r\n\r\n      <AppTitle>Astronomy Picture of the Day</AppTitle>\r\n      <Paragraph>\r\n        This is place where you can see pictures chosen by NASA as Astronomy\r\n        Picture of the Day. Set the date and explore!\r\n      </Paragraph>\r\n    </JumbotronBackground>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import moment from \"moment\";\r\n\r\nexport const today = moment().format(\"YYYY-MM-DD\");","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Container, Form, InputGroup } from \"react-bootstrap\";\r\nimport {today} from \"../helpers\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nconst FormContainer = styled(Form)`\r\n  color: ${(props) => props.theme.secondary};\r\n  margin: 40px auto;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 768px) {\r\n    max-width: 80%;\r\n  }\r\n`;\r\n\r\nconst InputGroupSquare = styled(InputGroup.Text)`\r\n  border-radius: 0;\r\n`;\r\n\r\nconst ButtonSquare = styled(Button)`\r\n  border-radius: 0;\r\n`;\r\n\r\n\r\nconst InputContainer = styled(Form.Control)`\r\n  width: 200px;\r\n`;\r\n\r\nfunction Input(props) {\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer onSubmit={props.handleSubmit}>\r\n        <InputGroup>\r\n          <Form.Label>Set the date to see the picture:</Form.Label>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroupSquare id=\"inputGroupPrepend\" className=\"no-radius\"><FontAwesomeIcon icon={faSearch} size=\"lg\" /></InputGroupSquare>\r\n          </InputGroup.Prepend>\r\n          <InputContainer\r\n            ref={inputRef}\r\n            type=\"date\"\r\n            min=\"1995-06-16\"\r\n            max={today}\r\n            name=\"date\"\r\n            required\r\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n          />{\" \"}\r\n          <ButtonSquare variant=\"secondary\" type=\"submit\">\r\n            Show!\r\n          </ButtonSquare>\r\n        </InputGroup>\r\n\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ModalContainer = styled(Modal)`\r\n  text-align: center;\r\n`\r\n\r\nfunction ModalPicture(props) {\r\n  return (\r\n    <ModalContainer show={props.show} onHide={props.handleClose} centered size=\"xl\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <img src={props.url} alt=\"picture_of_the_day\" />\r\n      </Modal.Body>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default ModalPicture;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { Col, Row, Spinner } from \"react-bootstrap\";\r\nimport ModalPicture from \"./ModalPicture\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as faHeartSolid } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as faHeartRegular } from \"@fortawesome/free-regular-svg-icons\";\r\nimport axios from \"axios\";\r\n\r\nconst CardContainer = styled.div`\r\n  text-align: center;\r\n  padding: 3rem;\r\n  background-color: ${(props) => props.theme.dark};\r\n  height: auto;\r\n  &.fade-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n    transition: all 3500ms;\r\n    animation: bounceIn 1.5s ease-in;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transition: all 1500ms;\r\n  }\r\n\r\n  @keyframes bounceIn {\r\n    0% {\r\n      transform: scale(0.95);\r\n    }\r\n    50% {\r\n      transform: scale(0.975);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.url});\r\n  background-size: cover;\r\n  background-position: 50% 50%;\r\n  height: 800px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-weight: 900;\r\n  color: ${(props) => props.theme.secondary};\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Paragraph = styled.div`\r\n  display: flex;\r\n  flex-flow: wrap;\r\n  align-items: center;\r\n  position: relative;\r\n  justify-content: space-between;\r\n  left: ${(props) => props.shift};\r\n  top: 10%;\r\n  width: 140%;\r\n  color: ${(props) => props.theme.secondary};\r\n  background-color: ${(props) => props.theme.light};\r\n  text-align: justify;\r\n  padding: 2rem;\r\n\r\n  p {\r\n    flex-basis: 100%;\r\n    font-family: \"Raleway\", sans-serif;\r\n    padding-bottom: 8px;\r\n    margin: 0;\r\n  }\r\n  @media (max-width: 768px) {\r\n    position: initial;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst IconContainer = styled(FontAwesomeIcon)``;\r\n\r\nconst Link = styled.a`\r\n  flex-basis: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: ${(props) => props.theme.danger};\r\n  color: ${(props) => props.theme.secondary};\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    color: ${(props) => props.theme.secondary};\r\n  }\r\n`;\r\n\r\nfunction PictureCard(props) {\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [pictureData, setPictureData] = useState(\"\");\r\n\r\n  const initialFavourite = !!localStorage.getItem(props.date);\r\n  const [isFavourite, setIsFavourite] = useState(initialFavourite);\r\n\r\n  const fetchPictureData = async (date) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.get(\r\n        `https://api.nasa.gov/planetary/apod?date=${date}&api_key=IrU9YCmzeRGcHbJULHNnNWTIhNitiAjxTegDI4XJ`\r\n      );\r\n      setPictureData(response.data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      //TODO handling error\r\n    }\r\n  };\r\n\r\n  const addRemoveToLocalStorage = () => {\r\n    if (isFavourite) {\r\n      localStorage.removeItem(props.date);\r\n      props.setNumberOfFavourites((prevState) => prevState - 1);\r\n    } else {\r\n      localStorage.setItem(props.date, JSON.stringify(pictureData));\r\n      props.setNumberOfFavourites((prevState) => prevState + 1);\r\n    }\r\n    setIsFavourite(!isFavourite);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPictureData(props.date);\r\n  }, [props.date]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <CardContainer>\r\n        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </CardContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Waypoint\r\n      onEnter={() => setAnimate(true)}\r\n      onLeave={() => setAnimate(false)}\r\n    >\r\n      <div>\r\n        <CSSTransition in={animate} timeout={1500} classNames=\"fade\">\r\n          <CardContainer>\r\n            <Row>\r\n              <Col md={{ span: 8, order: props.order ? 1 : 12 }}>\r\n                <Image url={pictureData.url} onClick={handleShow} />\r\n              </Col>\r\n              <Col md={{ span: 4, order: props.order ? 12 : 1 }}>\r\n                <Paragraph shift={props.shift}>\r\n                  <Title>{pictureData.title}</Title>\r\n                  <IconContainer\r\n                    icon={isFavourite ? faHeartSolid : faHeartRegular}\r\n                    size=\"2x\"\r\n                    onClick={addRemoveToLocalStorage}\r\n                  />\r\n                  <p>{pictureData.date}</p>\r\n                  <p>{pictureData.explanation}</p>\r\n                  <p>\r\n                    Copyright:{\" \"}\r\n                    {pictureData.copyright ? pictureData.copyright : \"unknown\"}\r\n                  </p>\r\n                  <Link href={pictureData.hdurl}>HD version</Link>\r\n                </Paragraph>\r\n              </Col>\r\n            </Row>\r\n\r\n            <ModalPicture\r\n              show={show}\r\n              handleClose={handleClose}\r\n              url={pictureData.url}\r\n              title={pictureData.title}\r\n            />\r\n          </CardContainer>\r\n        </CSSTransition>\r\n      </div>\r\n    </Waypoint>\r\n  );\r\n}\r\n\r\nexport default PictureCard;\r\n","import React from \"react\";\nimport PictureCard from \"./PictureCard\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\n\nconst SectionTitle = styled.h2`\n  font-family: \"Lato\", sans-serif;\n  font-weight: 900;\n  font-size: 3rem;\n  color: ${(props) => props.theme.secondary};\n  margin-left: 10%;\n  margin-bottom: 3%;\n  @media (max-width: 768px) {\n    font-size: 3rem;\n    margin: 0;\n  }\n`;\n\nconst Line = styled.hr`\n    display: block;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid ${(props) => props.theme.secondary};\n    margin: 5% 0;\n    margin-bottom: 3%;\n    padding: 0;\n}`;\n\nfunction TenLastPictures(props) {\n  const getLastTenDays = () => {\n    let dates = [];\n    for (let i = 0; i < 10; i++) {\n      dates[i] = moment()\n        .subtract(i + 1, \"days\")\n        .format(\"YYYY-MM-DD\");\n    }\n    return dates;\n  };\n\n  const dates = getLastTenDays();\n\n  const tenLastPicturesCards = dates.map((element, index) => {\n    const oddOrEven = index % 2;\n\n    return (\n      <PictureCard\n        key={index}\n        date={element}\n        order={!!oddOrEven}\n        shift={oddOrEven ? \"-40%\" : \"0\"}\n        setNumberOfFavourites={props.setNumberOfFavourites}\n      />\n    );\n  });\n\n  return (\n    <>\n      <Line />\n      <SectionTitle>View pictures from last ten days...</SectionTitle>;\n      {tenLastPicturesCards}\n    </>\n  );\n}\n\nexport default TenLastPictures;\n","import React, { Fragment, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport GlobalStyle, { dark, light } from \"../theme/globalStyle\";\nimport AppHeader from \"./AppHeader\";\nimport Input from \"./Input\";\nimport PictureCard from \"./PictureCard\";\nimport TenLastPictures from \"./TenLastPictures\";\nimport { today } from \"../helpers\";\n\nfunction App() {\n  const [isLightTheme, setLightTheme] = useState(false);\n  const [date, setDate] = useState(today);\n\n  let initialNumberOfFavourites = Object.keys(localStorage).length;\n  const [numberOfFavourites, setNumberOfFavourites] = useState(\n    initialNumberOfFavourites\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setDate(e.target.date.value);\n  };\n\n  return (\n    <Fragment>\n      <ThemeProvider theme={isLightTheme ? light : dark}>\n        <GlobalStyle />\n        <AppHeader\n          setLightTheme={setLightTheme}\n          isLightTheme={isLightTheme}\n          numberOfFavourites={numberOfFavourites}\n        />\n        <Input handleSubmit={handleSubmit} />\n        <PictureCard\n          date={date}\n          key={100}\n          order={true}\n          shift={\"-40%\"}\n          setNumberOfFavourites={setNumberOfFavourites}\n        />\n        <TenLastPictures setNumberOfFavourites={setNumberOfFavourites} />\n      </ThemeProvider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './fonts.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}