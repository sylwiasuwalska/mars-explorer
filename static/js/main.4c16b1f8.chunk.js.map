{"version":3,"sources":["theme/globalStyle.js","components/ModalPicture.js","components/PictureCard.js","helpers.js","components/AppHeader.js","components/FavouritePictures.js","components/Input.js","components/TenLastPictures.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["light","primary","secondary","danger","dark","backgroundColor","SectionTitle","styled","h2","props","theme","Line","hr","GlobalStyle","createGlobalStyle","ModalContainer","Modal","ModalPicture","show","onHide","handleClose","centered","size","Header","closeButton","Title","title","Body","src","url","alt","CardContainer","div","Image","Paragraph","shift","FavouriteIconContainer","button","Link","a","PictureCard","useState","animate","setAnimate","setShow","isLoading","setIsLoading","pictureData","setPictureData","initialFavourite","localStorage","getItem","date","isFavourite","setIsFavourite","fetchPictureData","axios","get","response","data","console","error","useEffect","localStorageData","JSON","parse","log","Spinner","animation","variant","role","className","onEnter","onLeave","CSSTransition","in","timeout","classNames","Row","Col","md","span","order","media_type","onClick","height","width","OverlayTrigger","placement","delay","hide","overlay","renderTooltipForAdding","removeItem","setNumberOfFavourites","prevState","setItem","stringify","icon","faHeartSolid","faHeartRegular","explanation","copyright","href","hdurl","today","moment","format","Tooltip","id","renderTooltipForFavouritePage","renderPictureCards","array","map","element","index","oddOrEven","key","JumbotronBackground","Jumbotron","AppTitle","h1","FavouriteContainer","ModeThemeChanger","p","AppHeader","fluid","to","faHeart","color","transform","numberOfFavourites","Form","Switch","onChange","setLightTheme","isLightTheme","type","label","faMoon","faSun","value","BackButton","Button","FavouritePictures","history","useHistory","favouritePictures","Object","keys","favouritePicturesCard","goBack","faLongArrowAltLeft","FormContainer","InputGroupSquare","InputGroup","Text","ButtonSquare","InputContainer","Control","Input","inputRef","useRef","current","focus","Container","onSubmit","handleSubmit","Label","Prepend","faSearch","ref","min","max","name","required","pattern","TenLastPictures","dates","i","subtract","getLastTenDays","tenLastPicturesCards","Main","setDate","e","preventDefault","target","App","initialNumberOfFavourites","length","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"0xCAGO,IAAMA,EAAQ,CACjBC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRH,MAAO,UACPI,KAAM,UACNC,gBAAiB,WAGRD,EAAO,CAChBH,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRH,MAAO,UACPI,KAAM,UACNC,gBAAiB,QAGRC,EAAeC,IAAOC,GAAV,KAId,SAACC,GAAD,OAAWA,EAAMC,MAAMR,aASrBS,EAAOJ,IAAOK,GAAV,KAIW,SAACH,GAAD,OAAWA,EAAMC,MAAMR,aA+BpCW,EAzBKC,YAAH,KAWO,SAACL,GAAD,OAAWA,EAAMC,MAAML,mB,+OCnD/C,IAAMU,EAAiBR,YAAOS,IAAPT,CAAH,KAiBLU,MAbf,SAAsBR,GACpB,OACE,kBAACM,EAAD,CAAgBG,KAAMT,EAAMS,KAAMC,OAAQV,EAAMW,YAAaC,UAAQ,EAACC,KAAK,MACzE,kBAACN,EAAA,EAAMO,OAAP,CAAcC,aAAW,GACvB,kBAACR,EAAA,EAAMS,MAAP,KAAchB,EAAMiB,QAEtB,kBAACV,EAAA,EAAMW,KAAP,KACE,yBAAKC,IAAKnB,EAAMoB,IAAKC,IAAI,0B,88DCFjC,IAAMC,EAAgBxB,IAAOyB,IAAV,KAGG,SAACvB,GAAD,OAAWA,EAAMC,MAAMN,QAkCvC6B,EAAQ1B,IAAOyB,IAAV,KACe,SAACvB,GAAD,OAAWA,EAAMoB,OAQrCJ,EAAQlB,IAAOC,GAAV,KAGA,SAACC,GAAD,OAAWA,EAAMC,MAAMR,aAI5BgC,GAAY3B,IAAOyB,IAAV,KAML,SAACvB,GAAD,OAAWA,EAAM0B,SAGhB,SAAC1B,GAAD,OAAWA,EAAMC,MAAMR,aACZ,SAACO,GAAD,OAAWA,EAAMC,MAAMV,SAgBvCoC,GAAyB7B,IAAO8B,OAAV,KAGjB,SAAC5B,GAAD,OAAWA,EAAMC,MAAMR,aAG5BoC,GAAO/B,IAAOgC,EAAV,KAIY,SAAC9B,GAAD,OAAWA,EAAMC,MAAMP,UAClC,SAACM,GAAD,OAAWA,EAAMC,MAAMR,aAOrB,SAACO,GAAD,OAAWA,EAAMC,MAAMR,aAoHrBsC,OAhHf,SAAqB/B,GAAQ,IAAD,EACIgC,oBAAS,GADb,mBACnBC,EADmB,KACVC,EADU,OAGFF,oBAAS,GAHP,mBAGnBvB,EAHmB,KAGb0B,EAHa,OAOQH,oBAAS,GAPjB,mBAOnBI,EAPmB,KAORC,EAPQ,OAQYL,mBAAS,IARrB,mBAQnBM,EARmB,KAQNC,EARM,KAUpBC,IAAqBC,aAAaC,QAAQ1C,EAAM2C,MAV5B,EAWYX,mBAASQ,GAXrB,mBAWnBI,EAXmB,KAWNC,EAXM,KAapBC,EAAgB,uCAAG,WAAOH,GAAP,eAAAb,EAAA,sEAErBO,GAAa,GAFQ,SAGEU,IAAMC,IAAN,mDACuBL,EADvB,sDAHF,OAGfM,EAHe,OAMrBV,EAAeU,EAASC,MACxBb,GAAa,GAPQ,gDASrBc,QAAQC,MAAR,MATqB,yDAAH,sDAoCtB,OAXAC,qBAAU,WACR,GAAIZ,aAAaC,QAAQ1C,EAAM2C,MAAO,CACpC,IAAMW,EAAmBC,KAAKC,MAAMf,aAAaC,QAAQ1C,EAAM2C,OAC/DJ,EAAee,GACfjB,GAAa,QAEbS,EAAiB9C,EAAM2C,QAExB,CAAC3C,EAAM2C,OAEVQ,QAAQM,IAAInB,GACRF,EAEA,kBAACd,EAAD,KACE,kBAACoC,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,QAAQC,KAAK,UAC7C,0BAAMC,UAAU,WAAhB,gBAON,kBAAC,IAAD,CACEC,QAAS,kBAAM7B,GAAW,IAC1B8B,QAAS,kBAAM9B,GAAW,KAE1B,6BACE,kBAAC+B,EAAA,EAAD,CAAeC,GAAIjC,EAASkC,QAAS,IAAMC,WAAW,QACpD,kBAAC9C,EAAD,KACE,kBAAC+C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,MAAOzE,EAAMyE,MAAQ,EAAI,KACf,UAAzBnC,EAAYoC,WAAuB,kBAAClD,EAAD,CAAOJ,IAAKkB,EAAYlB,IAAKuD,QAhE9D,kBAAMxC,GAAQ,MAgE0E,kBAAC,IAAD,CAAaf,IAAKkB,EAAYlB,IAAKwD,OAAO,QAAQC,MAAM,UAIvJ,kBAACP,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,MAAOzE,EAAMyE,MAAQ,GAAK,IAC5C,kBAAChD,GAAD,CAAWC,MAAO1B,EAAM0B,OACtB,kBAACV,EAAD,KAAQsB,EAAYrB,OACpB,kBAAC6D,EAAA,EAAD,CACEC,UAAU,MACVC,MAAO,CAAEvE,KAAM,IAAKwE,KAAM,KAC1BC,QAASC,IAET,kBAACxD,GAAD,CAAwBgD,QAtDV,WAC1B/B,GACFH,aAAa2C,WAAWpF,EAAM2C,MAC9B3C,EAAMqF,uBAAsB,SAACC,GAAD,OAAeA,EAAY,OAEvD7C,aAAa8C,QAAQvF,EAAM2C,KAAMY,KAAKiC,UAAUlD,IAChDtC,EAAMqF,uBAAsB,SAACC,GAAD,OAAeA,EAAY,MAEzDzC,GAAgBD,KA+CE,kBAAC,IAAD,CACE6C,KAAM7C,EAAc8C,IAAeC,IACnC9E,KAAK,SAIX,2BAAIyB,EAAYK,MAChB,2BAAIL,EAAYsD,aAChB,wCACa,IACVtD,EAAYuD,UAAYvD,EAAYuD,UAAY,WAEnD,kBAAChE,GAAD,CAAMiE,KAAMxD,EAAYyD,OAAxB,iBAKN,kBAAC,EAAD,CACEtF,KAAMA,EACNE,YAjGQ,kBAAMwB,GAAQ,IAkGtBf,IAAKkB,EAAYlB,IACjBH,MAAOqB,EAAYrB,aCpNpB+E,GAAQC,MAASC,OAAO,cAExBf,GAAyB,SAACnF,GACrC,OACE,kBAACmG,EAAA,EAAD,eAASC,GAAG,kBAAqBpG,GAAjC,qBAMSqG,GAAgC,SAACrG,GAC5C,OACE,kBAACmG,EAAA,EAAD,eAASC,GAAG,kBAAqBpG,GAAjC,wBAMSsG,GAAqB,SAACC,EAAOlB,GACxC,OAAOkB,EAAMC,KAAI,SAACC,EAASC,GACzB,IAAMC,EAAYD,EAAQ,EAE1B,OACE,kBAAC,GAAD,CACEE,IAAKF,EACL/D,KAAM8D,EACNhC,QAASkC,EACTjF,MAAOiF,EAAY,OAAS,IAC5BtB,sBAAuBA,Q,otCCzB/B,IAAMwB,GAAsB/G,YAAOgH,IAAPhH,CAAH,MASnBiH,GAAWjH,IAAOkH,GAAV,MAaRC,GAAqBnH,IAAO8B,OAAV,MAiBlBsF,GAAmBpH,IAAOyB,IAAV,MAQhBE,GAAY3B,IAAOqH,EAAV,MA6DAC,OAnDf,SAAmBpH,GACjB,OACE,kBAAC6G,GAAD,CAAqBQ,OAAK,GACxB,kBAAC,IAAD,CAAMC,GAAG,cACP,kBAACL,GAAD,CAAoBnD,UAAU,mBAC5B,kBAACgB,EAAA,EAAD,CACEC,UAAU,QACVC,MAAO,CAAEvE,KAAM,IAAKwE,KAAM,KAC1BC,QAASmB,IAET,kBAAC,IAAD,CACEZ,KAAM8B,IACNC,MAAM,QACN3G,KAAK,KACL4G,UAAU,mBAGd,0BAAM3D,UAAU,iBAAiB0D,MAAM,SACpCxH,EAAM0H,sBAKb,kBAACR,GAAD,KACE,kBAACS,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CACEC,SAAU,kBAAM7H,EAAM8H,eAAe9H,EAAM+H,eAC3CC,KAAK,SACL5B,GAAG,gBACH6B,MACEjI,EAAM+H,aACJ,kBAAC,IAAD,CAAiBtC,KAAMyC,MAEvB,kBAAC,IAAD,CAAiBzC,KAAM0C,MAG3BC,MAAM,WAIZ,kBAAC,IAAD,CAAMd,GAAG,kBACP,kBAACP,GAAD,qCACA,kBAAC,GAAD,8H,uMClGR,IAAMsB,GAAavI,YAAOwI,KAAPxI,CAAH,MAGL,SAACE,GAAD,OAAWA,EAAMC,MAAMR,aACZ,SAACO,GAAD,OAAWA,EAAMC,MAAML,mBAyB9B2I,OApBf,SAA2BvI,GACzB,IAAIwI,EAAUC,cACRC,EAAoBC,OAAOC,KAAKnG,cAChCoG,EAAwBvC,GAC5BoC,EACA1I,EAAMqF,uBAGR,OACE,oCACE,kBAACgD,GAAD,CAAYzE,QAAQ,YAAYe,QAAS,kBAAM6D,EAAQM,WACrD,kBAAC,IAAD,CAAiBrD,KAAMsD,MADzB,iBAGA,kBAAC7I,EAAD,MACA,kBAACL,EAAD,gCACCgJ,I,+eC1BP,IAAMG,GAAgBlJ,YAAO6H,IAAP7H,CAAH,MACR,SAACE,GAAD,OAAWA,EAAMC,MAAMR,aAS5BwJ,GAAmBnJ,YAAOoJ,KAAWC,KAAlBrJ,CAAH,MAIhBsJ,GAAetJ,YAAOwI,KAAPxI,CAAH,MAIZuJ,GAAiBvJ,YAAO6H,IAAK2B,QAAZxJ,CAAH,MAyCLyJ,OArCf,SAAevJ,GACb,IAAMwJ,EAAWC,iBAAO,MAMxB,OAJApG,qBAAU,WACRmG,EAASE,QAAQC,UAChB,IAGD,kBAACC,GAAA,EAAD,KACE,kBAACZ,GAAD,CAAea,SAAU7J,EAAM8J,cAC7B,kBAACZ,GAAA,EAAD,KACE,kBAACvB,EAAA,EAAKoC,MAAN,0CAEF,kBAACb,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWc,QAAZ,KACE,kBAACf,GAAD,CAAkB7C,GAAG,oBAAoBtC,UAAU,aACjD,kBAAC,IAAD,CAAiB2B,KAAMwE,IAAUpJ,KAAK,SAG1C,kBAACwI,GAAD,CACEa,IAAKV,EACLxB,KAAK,OACLmC,IAAI,aACJC,IAAKpE,GACLqE,KAAK,OACLC,UAAQ,EACRC,QAAQ,yBACP,IACH,kBAACnB,GAAD,CAAcxF,QAAQ,YAAYoE,KAAK,UAAvC,aCxBKwC,OA3Bf,SAAyBxK,GACvB,IAUMyK,EAViB,WAErB,IADA,IAAIA,EAAQ,GACHC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAMC,GAAKzE,MACR0E,SAASD,EAAI,EAAG,QAChBxE,OAAO,cAEZ,OAAOuE,EAGKG,GAERC,EAAuBvE,GAC3BmE,EACAzK,EAAMqF,uBAGR,OACE,oCACE,kBAACnF,EAAD,MACA,kBAACL,EAAD,4CAFF,IAGGgL,ICEQC,OAxBf,SAAc9K,GAAQ,IAAD,EACKgC,mBAASgE,IADd,mBACZrD,EADY,KACNoI,EADM,KAQnB,OACE,oCACG,IACD,kBAAC,GAAD,CAAOjB,aARU,SAACkB,GACpBA,EAAEC,iBACFF,EAAQC,EAAEE,OAAOvI,KAAKyF,UAOpB,kBAAC,GAAD,CACEzF,KAAMA,EACNiE,IAAK,IACLnC,OAAO,EACP/C,MAAO,OACP2D,sBAAuBrF,EAAMqF,wBAE/B,kBAAC,GAAD,CAAiBA,sBAAuBrF,EAAMqF,0BCarC8F,OA7Bf,WAAgB,IAAD,EACyBnJ,oBAAS,GADlC,mBACN+F,EADM,KACQD,EADR,KAGTsD,EAA4BzC,OAAOC,KAAKnG,cAAc4I,OAH7C,EAIuCrJ,mBAClDoJ,GALW,mBAIN1D,EAJM,KAIcrC,EAJd,KAOb,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAepF,MAAO8H,EAAexI,EAAQI,GAC3C,kBAAC,EAAD,MACA,kBAAC,GAAD,CACEmI,cAAeA,EACfC,aAAcA,EACdL,mBAAoBA,IAEtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,kBAChB,kBAAC,GAAD,CAAMlG,sBAAuBA,KAE/B,kBAAC,IAAD,CAAOkG,KAAK,cACV,kBAAC,GAAD,CAAmBlG,sBAAuBA,SClBlCmG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApJ,GACLD,QAAQC,MAAMA,EAAMqJ,a","file":"static/js/main.4c16b1f8.chunk.js","sourcesContent":["import styled, {createGlobalStyle} from \"styled-components\";\r\n\r\n\r\nexport const light = {\r\n    primary: \"#111111\",\r\n    secondary: \"#1A1A1A\",\r\n    danger: \"#8301FE\",\r\n    light: \"#f4f4f4\",\r\n    dark: \"#999999\",\r\n    backgroundColor: \"#f4f4f4\",\r\n};\r\n\r\nexport const dark = {\r\n    primary: \"#999999\",\r\n    secondary: \"#FFFFFF\",\r\n    danger: \"#8301FE\",\r\n    light: \"#1A1A1A\",\r\n    dark: \"#111111\",\r\n    backgroundColor: \"#000\",\r\n};\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: 900;\r\n  font-size: 3rem;\r\n  color: ${(props) => props.theme.secondary};\r\n  margin-left: 10%;\r\n  margin-bottom: 3%;\r\n  @media (max-width: 768px) {\r\n    font-size: 3rem;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Line = styled.hr`\r\n    display: block;\r\n    height: 1px;\r\n    border: 0;\r\n    border-top: 1px solid ${(props) => props.theme.secondary};\r\n    margin: 5% 0;\r\n    margin-bottom: 3%;\r\n    padding: 0;\r\n}`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  \r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    \r\n    @media (max-width: 768px) {\r\n      text-align: center;\r\n    }\r\n\r\n  }\r\n \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n      monospace;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ModalContainer = styled(Modal)`\r\n  text-align: center;\r\n`\r\n\r\nfunction ModalPicture(props) {\r\n  return (\r\n    <ModalContainer show={props.show} onHide={props.handleClose} centered size=\"xl\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <img src={props.url} alt=\"picture_of_the_day\" />\r\n      </Modal.Body>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default ModalPicture;\r\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Waypoint } from \"react-waypoint\";\nimport { Col, OverlayTrigger, Row, Spinner } from \"react-bootstrap\";\nimport ModalPicture from \"./ModalPicture\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { renderTooltipForAdding } from \"../helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as faHeartSolid } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as faHeartRegular } from \"@fortawesome/free-regular-svg-icons\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\n\nconst CardContainer = styled.div`\n  text-align: center;\n  padding: 3rem;\n  background-color: ${(props) => props.theme.dark};\n  height: auto;\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: all 3500ms;\n    animation: bounceIn 1.5s ease-in;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: all 1500ms;\n  }\n\n  @keyframes bounceIn {\n    0% {\n      transform: scale(0.95);\n    }\n    50% {\n      transform: scale(0.975);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  background-position: 50% 50%;\n  height: 800px;\n  width: 100%;\n  cursor: pointer;\n`;\n\nconst Title = styled.h2`\n  font-family: \"Raleway\", sans-serif;\n  font-weight: 900;\n  color: ${(props) => props.theme.secondary};\n  font-size: 2rem;\n`;\n\nconst Paragraph = styled.div`\n  display: flex;\n  flex-flow: wrap;\n  align-items: center;\n  position: relative;\n  justify-content: space-between;\n  left: ${(props) => props.shift};\n  top: 10%;\n  width: 140%;\n  color: ${(props) => props.theme.secondary};\n  background-color: ${(props) => props.theme.light};\n  text-align: justify;\n  padding: 2rem;\n\n  p {\n    flex-basis: 100%;\n    font-family: \"Raleway\", sans-serif;\n    padding-bottom: 8px;\n    margin: 0;\n  }\n  @media (max-width: 768px) {\n    position: initial;\n    width: 100%;\n  }\n`;\n\nconst FavouriteIconContainer = styled.button`\n  background-color: transparent;\n  border: none;\n  color: ${(props) => props.theme.secondary};\n`;\n\nconst Link = styled.a`\n  flex-basis: 100%;\n  display: flex;\n  justify-content: center;\n  background-color: ${(props) => props.theme.danger};\n  color: ${(props) => props.theme.secondary};\n  margin: 10px;\n  padding: 10px 20px;\n\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n    color: ${(props) => props.theme.secondary};\n  }\n`;\n\nfunction PictureCard(props) {\n  const [animate, setAnimate] = useState(false);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [pictureData, setPictureData] = useState(\"\");\n\n  const initialFavourite = !!localStorage.getItem(props.date);\n  const [isFavourite, setIsFavourite] = useState(initialFavourite);\n\n  const fetchPictureData = async (date) => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(\n        `https://api.nasa.gov/planetary/apod?date=${date}&api_key=IrU9YCmzeRGcHbJULHNnNWTIhNitiAjxTegDI4XJ`\n      );\n      setPictureData(response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      //TODO handling error\n    }\n  };\n\n  const addRemoveToLocalStorage = () => {\n    if (isFavourite) {\n      localStorage.removeItem(props.date);\n      props.setNumberOfFavourites((prevState) => prevState - 1);\n    } else {\n      localStorage.setItem(props.date, JSON.stringify(pictureData));\n      props.setNumberOfFavourites((prevState) => prevState + 1);\n    }\n    setIsFavourite(!isFavourite);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(props.date)) {\n      const localStorageData = JSON.parse(localStorage.getItem(props.date));\n      setPictureData(localStorageData);\n      setIsLoading(false);\n    } else {\n      fetchPictureData(props.date);\n    }\n  }, [props.date]);\n\n  console.log(pictureData);\n  if (isLoading) {\n    return (\n      <CardContainer>\n        <Spinner animation=\"grow\" variant=\"light\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </CardContainer>\n    );\n  }\n\n  return (\n    <Waypoint\n      onEnter={() => setAnimate(true)}\n      onLeave={() => setAnimate(false)}\n    >\n      <div>\n        <CSSTransition in={animate} timeout={1000} classNames=\"fade\">\n          <CardContainer>\n            <Row>\n              <Col md={{ span: 8, order: props.order ? 1 : 12 }}>\n                  {pictureData.media_type===\"image\" ? <Image url={pictureData.url} onClick={handleShow} /> : <ReactPlayer url={pictureData.url} height=\"800px\" width=\"100%\" /> }\n\n\n              </Col>\n              <Col md={{ span: 4, order: props.order ? 12 : 1 }}>\n                <Paragraph shift={props.shift}>\n                  <Title>{pictureData.title}</Title>\n                  <OverlayTrigger\n                    placement=\"top\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={renderTooltipForAdding}\n                  >\n                    <FavouriteIconContainer onClick={addRemoveToLocalStorage}>\n                      <FontAwesomeIcon\n                        icon={isFavourite ? faHeartSolid : faHeartRegular}\n                        size=\"2x\"\n                      />\n                    </FavouriteIconContainer>\n                  </OverlayTrigger>\n                  <p>{pictureData.date}</p>\n                  <p>{pictureData.explanation}</p>\n                  <p>\n                    Copyright:{\" \"}\n                    {pictureData.copyright ? pictureData.copyright : \"unknown\"}\n                  </p>\n                  <Link href={pictureData.hdurl}>HD version</Link>\n                </Paragraph>\n              </Col>\n            </Row>\n\n            <ModalPicture\n              show={show}\n              handleClose={handleClose}\n              url={pictureData.url}\n              title={pictureData.title}\n            />\n          </CardContainer>\n        </CSSTransition>\n      </div>\n    </Waypoint>\n  );\n}\n\nexport default PictureCard;\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Tooltip } from \"react-bootstrap\";\r\nimport PictureCard from \"./components/PictureCard\";\r\n\r\nexport const today = moment().format(\"YYYY-MM-DD\");\r\n\r\nexport const renderTooltipForAdding = (props) => {\r\n  return (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Add to favourite\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport const renderTooltipForFavouritePage = (props) => {\r\n  return (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      See your favourites\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport const renderPictureCards = (array, setNumberOfFavourites) => {\r\n  return array.map((element, index) => {\r\n    const oddOrEven = index % 2;\r\n\r\n    return (\r\n      <PictureCard\r\n        key={index}\r\n        date={element}\r\n        order={!!oddOrEven}\r\n        shift={oddOrEven ? \"-40%\" : \"0\"}\r\n        setNumberOfFavourites={setNumberOfFavourites}\r\n      />\r\n    );\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Jumbotron, OverlayTrigger } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { renderTooltipForFavouritePage } from \"../helpers\";\r\n\r\nconst JumbotronBackground = styled(Jumbotron)`\r\n  background-image: url(\"https://apod.nasa.gov/apod/image/2004/STSCI-H-p2016a-m-2000x1374.jpg\");\r\n  background-size: cover;\r\n  background-color: transparent;\r\n  padding-top: 15vh;\r\n  padding-bottom: 15vh;\r\n  margin: 0;\r\n`;\r\n\r\nconst AppTitle = styled.h1`\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: 900;\r\n  font-size: 4rem;\r\n  color: #fff;\r\n  margin-left: 10%;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 3rem;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst FavouriteContainer = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  font-weight: 500;\r\n  top: 30px;\r\n  left: 30px;\r\n  color: #000;\r\n  z-index: 10;\r\n\r\n  &.fa-layers-text {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst ModeThemeChanger = styled.div`\r\n  position: fixed;\r\n  top: 30px;\r\n  right: 30px;\r\n  color: #fff;\r\n  z-index: 10;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  margin-left: 10%;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n  @media (max-width: 768px) {\r\n    margin: 0;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nfunction AppHeader(props) {\r\n  return (\r\n    <JumbotronBackground fluid>\r\n      <Link to=\"/favourite\">\r\n        <FavouriteContainer className=\"fa-layers fa-fw\">\r\n          <OverlayTrigger\r\n            placement=\"right\"\r\n            delay={{ show: 250, hide: 400 }}\r\n            overlay={renderTooltipForFavouritePage}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faHeart}\r\n              color=\"white\"\r\n              size=\"2x\"\r\n              transform=\"left-3 down-1\"\r\n            />\r\n          </OverlayTrigger>\r\n          <span className=\"fa-layers-text\" color=\"black\">\r\n            {props.numberOfFavourites}\r\n          </span>\r\n        </FavouriteContainer>\r\n      </Link>\r\n\r\n      <ModeThemeChanger>\r\n        <Form>\r\n          <Form.Switch\r\n            onChange={() => props.setLightTheme(!props.isLightTheme)}\r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label={\r\n              props.isLightTheme ? (\r\n                <FontAwesomeIcon icon={faMoon} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={faSun} />\r\n              )\r\n            }\r\n            value=\"dark\"\r\n          />\r\n        </Form>\r\n      </ModeThemeChanger>\r\n      <Link to=\"/nasa-explorer\">\r\n        <AppTitle>Astronomy Picture of the Day</AppTitle>\r\n        <Paragraph>\r\n          This is place where you can see pictures chosen by NASA as Astronomy\r\n          Picture of the Day. Set the date and explore!\r\n        </Paragraph>\r\n      </Link>\r\n    </JumbotronBackground>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport { SectionTitle, Line } from \"../theme/globalStyle\";\nimport { Button } from \"react-bootstrap\";\nimport { renderPictureCards } from \"../helpers\";\n\nconst BackButton = styled(Button)`\n  border-radius: 0;\n  border: none;\n  color: ${(props) => props.theme.secondary};\n  background-color: ${(props) => props.theme.backgroundColor};\n  position: relative;\n  left: 10%;\n`;\n\nfunction FavouritePictures(props) {\n  let history = useHistory();\n  const favouritePictures = Object.keys(localStorage);\n  const favouritePicturesCard = renderPictureCards(\n    favouritePictures,\n    props.setNumberOfFavourites\n  );\n\n  return (\n    <>\n      <BackButton variant=\"secondary\" onClick={() => history.goBack()}>\n        <FontAwesomeIcon icon={faLongArrowAltLeft} /> take me back\n      </BackButton>\n      <Line />\n      <SectionTitle>Your favourite pictures</SectionTitle>\n      {favouritePicturesCard}\n    </>\n  );\n}\n\nexport default FavouritePictures;\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Container, Form, InputGroup } from \"react-bootstrap\";\r\nimport { today } from \"../helpers\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst FormContainer = styled(Form)`\r\n  color: ${(props) => props.theme.secondary};\r\n  margin: 40px auto;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 768px) {\r\n    max-width: 80%;\r\n  }\r\n`;\r\n\r\nconst InputGroupSquare = styled(InputGroup.Text)`\r\n  border-radius: 0;\r\n`;\r\n\r\nconst ButtonSquare = styled(Button)`\r\n  border-radius: 0;\r\n`;\r\n\r\nconst InputContainer = styled(Form.Control)`\r\n  width: 200px;\r\n`;\r\n\r\nfunction Input(props) {\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer onSubmit={props.handleSubmit}>\r\n        <InputGroup>\r\n          <Form.Label>Set the date to see the picture:</Form.Label>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroupSquare id=\"inputGroupPrepend\" className=\"no-radius\">\r\n              <FontAwesomeIcon icon={faSearch} size=\"lg\" />\r\n            </InputGroupSquare>\r\n          </InputGroup.Prepend>\r\n          <InputContainer\r\n            ref={inputRef}\r\n            type=\"date\"\r\n            min=\"1995-06-16\"\r\n            max={today}\r\n            name=\"date\"\r\n            required\r\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n          />{\" \"}\r\n          <ButtonSquare variant=\"secondary\" type=\"submit\">\r\n            Show!\r\n          </ButtonSquare>\r\n        </InputGroup>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\nimport PictureCard from \"./PictureCard\";\nimport moment from \"moment\";\nimport { SectionTitle, Line } from \"../theme/globalStyle\";\nimport { renderPictureCards } from \"../helpers\";\n\nfunction TenLastPictures(props) {\n  const getLastTenDays = () => {\n    let dates = [];\n    for (let i = 0; i < 10; i++) {\n      dates[i] = moment()\n        .subtract(i + 1, \"days\")\n        .format(\"YYYY-MM-DD\");\n    }\n    return dates;\n  };\n\n  const dates = getLastTenDays();\n\n  const tenLastPicturesCards = renderPictureCards(\n    dates,\n    props.setNumberOfFavourites\n  );\n\n  return (\n    <>\n      <Line />\n      <SectionTitle>View pictures from last ten days...</SectionTitle>;\n      {tenLastPicturesCards}\n    </>\n  );\n}\n\nexport default TenLastPictures;\n","import React, { useState } from \"react\";\r\nimport Input from \"./Input\";\r\nimport PictureCard from \"./PictureCard\";\r\nimport TenLastPictures from \"./TenLastPictures\";\r\nimport { today } from \"../helpers\";\r\n\r\nfunction Main(props) {\r\n  const [date, setDate] = useState(today);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setDate(e.target.date.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Input handleSubmit={handleSubmit} />\r\n      <PictureCard\r\n        date={date}\r\n        key={100}\r\n        order={true}\r\n        shift={\"-40%\"}\r\n        setNumberOfFavourites={props.setNumberOfFavourites}\r\n      />\r\n      <TenLastPictures setNumberOfFavourites={props.setNumberOfFavourites} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { Fragment, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Switch, Route } from \"react-router-dom\";\nimport GlobalStyle, { dark, light } from \"../theme/globalStyle\";\nimport AppHeader from \"./AppHeader\";\n\nimport FavouritePictures from \"./FavouritePictures\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [isLightTheme, setLightTheme] = useState(false);\n\n  let initialNumberOfFavourites = Object.keys(localStorage).length;\n  const [numberOfFavourites, setNumberOfFavourites] = useState(\n    initialNumberOfFavourites\n  );\n  return (\n    <Fragment>\n      <ThemeProvider theme={isLightTheme ? light : dark}>\n        <GlobalStyle />\n        <AppHeader\n          setLightTheme={setLightTheme}\n          isLightTheme={isLightTheme}\n          numberOfFavourites={numberOfFavourites}\n        />\n        <Switch>\n          <Route exact path=\"/nasa-explorer\">\n            <Main setNumberOfFavourites={setNumberOfFavourites} />\n          </Route>\n          <Route path=\"/favourite\">\n            <FavouritePictures setNumberOfFavourites={setNumberOfFavourites} />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./fonts.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}