{"version":3,"sources":["theme/globalStyle.js","components/AppHeader.js","helpers.js","components/Input.js","components/ModalPicture.js","components/PictureCard.js","components/App.js","serviceWorker.js","index.js"],"names":["light","primary","secondary","danger","dark","backgroundColor","background","GlobalStyle","createGlobalStyle","props","theme","JumbotronBackground","styled","Jumbotron","AppTitle","h1","ModeThemeChanger","div","Paragraph","p","AppHeader","fluid","Form","Switch","onChange","setLightTheme","isLightTheme","type","id","label","icon","faMoon","faSun","value","today","Date","toISOString","slice","FormContainer","InputGroupSquare","InputGroup","Text","ButtonSquare","Button","InputContainer","Control","Input","inputRef","useRef","useEffect","current","focus","Container","onSubmit","handleSubmit","Label","Prepend","className","faSearch","size","ref","min","max","name","required","pattern","variant","ModalContainer","Modal","ModalPicture","show","onHide","handleClose","centered","Header","closeButton","Title","title","Body","src","url","alt","CardContainer","Image","h2","Link","a","PictureCard","useState","setShow","CSSTransition","in","animate","timeout","classNames","pictureData","Row","Col","md","onClick","date","explanation","copyright","href","hdurl","App","setDate","setPictureData","setAnimate","fetchData","axios","get","response","console","log","data","error","e","preventDefault","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9b1d4ee8.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const light = {\r\n    primary: \"#111111\",\r\n    secondary: \"#1A1A1A\",\r\n    danger: \"#8301FE\",\r\n    light: \"#f4f4f4\",\r\n    dark: \"#999999\",\r\n    backgroundColor: \"#f4f4f4\",\r\n    background:\r\n        \"url(https://apod.nasa.gov/apod/image/2004/MVP_Aspinall_2048.jpg)\",\r\n};\r\n\r\nexport const dark = {\r\n    primary: \"#999999\",\r\n    secondary: \"#FFFFFF\",\r\n    danger: \"#8301FE\",\r\n    light: \"#1A1A1A\",\r\n    dark: \"#111111\",\r\n    backgroundColor: \"#000\",\r\n    background:\r\n        \"url(https://apod.nasa.gov/apod/image/2004/STSCI-H-p2016a-m-2000x1374.jpg)\",\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  \r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    \r\n    @media (max-width: 768px) {\r\n      text-align: center;\r\n    }\r\n\r\n  }\r\n \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n      monospace;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Jumbotron } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst JumbotronBackground = styled(Jumbotron)`\r\n  background-image: url(\"https://apod.nasa.gov/apod/image/2004/STSCI-H-p2016a-m-2000x1374.jpg\");\r\n  background-size: cover;\r\n  background-color: transparent;\r\n  padding-top: 15vh;\r\n  padding-bottom: 15vh;\r\n`;\r\n\r\nconst AppTitle = styled.h1`\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: 900;\r\n  font-size: 4rem;\r\n  color: #fff;\r\n  margin-left: 10%;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 3rem;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst ModeThemeChanger = styled.div`\r\n  position: fixed;\r\n  top: 30px;\r\n  right: 30px;\r\n  color: #fff;\r\n  z-index: 10;\r\n  \r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  margin-left: 10%;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 0;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nfunction AppHeader(props) {\r\n  return (\r\n    <JumbotronBackground fluid>\r\n      <ModeThemeChanger>\r\n        <Form>\r\n          <Form.Switch\r\n            onChange={() => props.setLightTheme(!props.isLightTheme)}\r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label={\r\n              props.isLightTheme ? (\r\n                <FontAwesomeIcon icon={faMoon}/>\r\n              ) : (\r\n                <FontAwesomeIcon icon={faSun}/>\r\n              )\r\n            }\r\n            value=\"dark\"\r\n          />\r\n        </Form>\r\n      </ModeThemeChanger>\r\n      <AppTitle>Astronomy Picture of the Day</AppTitle>\r\n      <Paragraph>\r\n        This is place where you can see pictures chosen by NASA as Astronomy\r\n        Picture of the Day. Set the date and explore!\r\n      </Paragraph>\r\n    </JumbotronBackground>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","export const today = new Date().toISOString().slice(0, 10)","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Container, Form, InputGroup } from \"react-bootstrap\";\r\nimport {today} from \"../helpers\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nconst FormContainer = styled(Form)`\r\n  color: ${(props) => props.theme.secondary};\r\n  margin: 40px auto;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 768px) {\r\n    max-width: 80%;\r\n  }\r\n`;\r\n\r\nconst InputGroupSquare = styled(InputGroup.Text)`\r\n  border-radius: 0;\r\n`;\r\n\r\nconst ButtonSquare = styled(Button)`\r\n  border-radius: 0;\r\n`;\r\n\r\n\r\nconst InputContainer = styled(Form.Control)`\r\n  width: 200px;\r\n`;\r\n\r\nfunction Input(props) {\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer onSubmit={props.handleSubmit}>\r\n        <InputGroup>\r\n          <Form.Label>Set the date to see the picture:</Form.Label>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroupSquare id=\"inputGroupPrepend\" className=\"no-radius\"><FontAwesomeIcon icon={faSearch} size=\"lg\" /></InputGroupSquare>\r\n          </InputGroup.Prepend>\r\n          <InputContainer\r\n            ref={inputRef}\r\n            type=\"date\"\r\n            min=\"1995-06-16\"\r\n            max={today}\r\n            name=\"date\"\r\n            required\r\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n          />{\" \"}\r\n          <ButtonSquare variant=\"secondary\" type=\"submit\">\r\n            Show!\r\n          </ButtonSquare>\r\n        </InputGroup>\r\n\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ModalContainer = styled(Modal)`\r\n  text-align: center;\r\n`\r\n\r\nfunction ModalPicture(props) {\r\n  return (\r\n    <ModalContainer show={props.show} onHide={props.handleClose} centered size=\"xl\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <img src={props.url} alt=\"picture_of_the_day\" />\r\n      </Modal.Body>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default ModalPicture;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Col, Row} from \"react-bootstrap\";\r\nimport ModalPicture from \"./ModalPicture\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst CardContainer = styled.div`\r\n  text-align: center;\r\n  padding: 3rem;\r\n  background-color: ${(props) => props.theme.dark};\r\n  height: auto;\r\n  &.fade-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n    transition: all 3500ms;\r\n    animation: bounceIn 1.5s ease-in;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transition: all 1500ms;\r\n  }\r\n\r\n  @keyframes bounceIn {\r\n    0% {\r\n      transform: scale(0.95);\r\n    }\r\n    50% {\r\n      transform: scale(0.975);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.url});\r\n  background-size: cover;\r\n  background-position: 50% 50%;\r\n  height: 800px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-weight: 900;\r\n  color: ${(props) => props.theme.secondary};\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Paragraph = styled.div`\r\n  display: flex;\r\n  flex-flow: wrap;\r\n  align-items: center;\r\n  position: relative;\r\n  left: -40%;\r\n  top: 10%;\r\n  width: 140%;\r\n  color: ${(props) => props.theme.secondary};\r\n  background-color: ${(props) => props.theme.light};\r\n  text-align: justify;\r\n  padding: 2rem;\r\n\r\n  p {\r\n  flex-basis: 100%;\r\n    font-family: \"Raleway\", sans-serif;\r\n    padding-bottom: 8px;\r\n    margin: 0;\r\n  }\r\n  @media (max-width: 768px) {\r\n    position: initial;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  flex-basis: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: ${(props) => props.theme.danger};\r\n  color: ${(props) => props.theme.secondary};\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    color: ${(props) => props.theme.secondary};\r\n  }\r\n`;\r\n\r\nfunction PictureCard(props) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {});\r\n\r\n  return (\r\n    <CSSTransition in={props.animate} timeout={1500} classNames=\"fade\">\r\n      <CardContainer url={props.pictureData.url}>\r\n        <Row>\r\n          <Col md={8}>\r\n            <Image url={props.pictureData.url} onClick={handleShow} />\r\n          </Col>\r\n          <Col md={4}>\r\n            <Paragraph>\r\n              <Title>{props.pictureData.title}</Title>\r\n              <p>{props.pictureData.date}</p>\r\n              <p>{props.pictureData.explanation}</p>\r\n              <p>\r\n                Copyright:{\" \"}\r\n                {props.pictureData.copyright\r\n                  ? props.pictureData.copyright\r\n                  : \"unknown\"}\r\n              </p>\r\n              <Link href={props.pictureData.hdurl}>HD version</Link>\r\n            </Paragraph>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ModalPicture\r\n          show={show}\r\n          handleClose={handleClose}\r\n          url={props.pictureData.url}\r\n          title={props.pictureData.title}\r\n        />\r\n      </CardContainer>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default PictureCard;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle, { dark, light } from \"../theme/globalStyle\";\nimport AppHeader from \"./AppHeader\";\nimport Input from \"./Input\";\nimport PictureCard from \"./PictureCard\";\nimport {today} from \"../helpers\"\n\nfunction App() {\n\n  const [isLightTheme, setLightTheme] = useState(false);\n  const [date, setDate] = useState(today);\n  const [pictureData, setPictureData] = useState(\"\");\n  const [animate, setAnimate] = useState(false);\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setDate(e.target.date.value);\n  };\n\n  const fetchData = async (date) => {\n    try {\n      setAnimate(false);\n      const response = await axios.get(\n        `https://api.nasa.gov/planetary/apod?date=${date}&api_key=IrU9YCmzeRGcHbJULHNnNWTIhNitiAjxTegDI4XJ`\n      );\n      console.log(response.data);\n      setPictureData(response.data);\n      setAnimate(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(date);\n  }, [date]);\n\n  return (\n    <Fragment>\n      <ThemeProvider theme={isLightTheme ? light : dark}>\n        <GlobalStyle />\n        <AppHeader setLightTheme={setLightTheme} isLightTheme={isLightTheme} />\n\n          <Input handleSubmit={handleSubmit} />\n          <PictureCard pictureData={pictureData} animate={animate} />\n\n      </ThemeProvider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}